import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np


#시퀀스 예측 데이터 생성
X = [] #X데이터에 숫자를 넣고
Y = [] #Y데이터에 결과를 넣음

for i in range(6):
  lst = list(range(i,i+4))
  X.append(list(map(lambda c: [c/10], lst)))
  Y.append((i+4) / 10)

X = np.array(X)
Y = np.array(Y)
for i in range(len(X)):
  print(X[i], Y[i])

#시퀀스에 넣은 데이터를 사용해서 학습함
model = tf.keras.Sequential([
    tf.keras.layers.SimpleRNN(units = 10, return_sequences = False, input_shape = [4,1]),
    tf.keras.layers.Dense(1)
])

model.compile(optimizer = 'adam', loss = 'mse')
model.summary()

#학습한 네트워크 결과를 확임함
model.fit(X, Y, epochs = 100, verbose = 0)
print(model.predict(X))

#학습되지 않은 시퀀스에 대한 예측결과 출력
print(model.predict(np.array([[[0.6], [0.7], [0.8], [0.9]]])))
print(model.predict(np.array([[[-0.1], [0.0], [0.1], [0.2]]])))       
